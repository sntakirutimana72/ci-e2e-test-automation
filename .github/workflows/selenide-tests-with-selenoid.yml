name: Selenide Tests with Selenoid

on:
  push:
    branches:
      - selenide-test-with-selenoid-hub
    paths-ignore:
      - '.github/badges/**'

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tests with docker compose
        id: tests
        run: |
          set -o pipefail
          docker compose up --build --abort-on-container-exit --exit-code-from test-runner | tee result.log
          EXIT_CODE=${PIPESTATUS[0]}
          echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT

      - name: Send Slack Notification
        if: always()
        run: |
          EXIT_CODE=${{ steps.tests.outputs.exit_code }}
          if [ "$EXIT_CODE" -eq 0 ]; then
            STATUS="✅ *Test Suite Passed*"
            COLOR="good"
          else
            STATUS="❌ *Test Suite Failed*"
            COLOR="danger"
          fi

          curl -X POST -H 'Content-type: application/json' \
            --data "{
              \"attachments\": [
                {
                  \"color\": \"$COLOR\",
                  \"text\": \"$STATUS\",
                  \"footer\": \"GitHub Actions • test-runner\",
                  \"ts\": $(date +%s)
                }
              ]
            }" $SLACK_WEBHOOK_URL

      - name: Cleanup
        if: always()
        run: docker compose down -v

      - name: Upload badges
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ github.workflow }}-badges
          path: reports/badges/
          retention-days: 1

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ github.workflow }}-allure-results
          path: reports/allure/
          retention-days: 1

      - name: Slack Notification - Job Finished
        if: always()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*API Test Results:* ${{ env.SLACK_STATUS_ICON }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "Workflow: _${{ github.workflow }}_\n Status: `${{ env.JOB_STATUS }}`\nBranch: _${{ github.ref }}_\nCommit: `${{ github.sha }}`\n:link: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View workflow run>"
  
  publish-badges:
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download badges
        uses: actions/download-artifact@v4
        if: always()
        with:
          name: ${{ github.workflow }}-badges
          path: .github/badges/
          
      - name: Commit and push updated badges
        run: |
          git add .github/badges/*.json
          
          if git diff --cached --quiet; then
            echo "No badge changes to commit."
          else
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit -m "[skip ci] Update all badges"
            git push
          fi

  generate-allure-report:
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download allure results
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: ${{ github.workflow }}-allure-results
          path: allure-results/

      - name: Combine Allure results
        run: |
          mkdir -p combined-results
          
          for browser in chrome firefox edge; do
            for dir in allure-results/"${browser}*"; do
              if [ -d "$dir" ]; then
                echo "Copying results from $dir..."
                cp -r "$dir"/* combined-results/ 2>/dev/null || true
              fi
            done
          done
          
          # List combined results for verification
          echo "Combined results:"
          ls -la combined-results/ || echo "No combined results found"

      - name: Get Allure history
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: combined-results
          allure_history: allure-history
          keep_reports: 5

      - name: Deploy to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
          force_orphan: true

      - name: Set report status icon
        run: |
          case "${{ job.status }}" in
            success)
              echo "REPORT_STATUS_ICON=:white_check_mark: REPORT GENERATED" >> $GITHUB_ENV
              ;;
            failure)
              echo "REPORT_STATUS_ICON=:x: REPORT FAILED" >> $GITHUB_ENV
              ;;
            cancelled)
              echo "REPORT_STATUS_ICON=:warning: REPORT CANCELLED" >> $GITHUB_ENV
              ;;
          esac

      - name: Slack Notification - Report Generation Finished
        if: always()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Allure Report Status:* ${{ env.REPORT_STATUS_ICON }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "Workflow: _${{ github.workflow }}_\n Branch: _${{ github.ref }}_\n:globe_with_meridians: <https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}|View Allure Report>\n:link: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View workflow run>"