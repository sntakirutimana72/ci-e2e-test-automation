name: CI

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run tests and generate coverage
        run: mvn clean verify | tee mvn-output.log
        continue-on-error: true

      - name: Upload coverage report
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: target/site/jacoco/jacoco.xml

      - name: Set success icon
        if: success()
        run: 'echo "SLACK_STATUS_ICON=:white_check_mark: PASSED" >> $GITHUB_ENV'

      - name: Set emoji for failure
        if: failure()
        run: 'echo "SLACK_STATUS_ICON=:x: FAILED" >> $GITHUB_ENV'

      - name: Set emoji for cancelled
        if: cancelled()
        run: 'echo "SLACK_STATUS_ICON=:warning: CANCELLED" >> $GITHUB_ENV'

      - name: Extract test summary
        run: |
          tail -n 20 mvn-output.log > test-summary.txt
          SUMMARY=$(cat test-summary.txt | sed ':a;N;$!ba;s/\n/\\n/g')
          echo "SLACK_TEST_SUMMARY=$SUMMARY" >> $GITHUB_ENV

      - name: Slack Notification
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": ${{ toJson(format("*CI Test Results*: {0}", env.SLACK_STATUS_ICON)) }},
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJson(format("{0} *CI Workflow:* `{1}`\n*Job:* `{2}`\n*Status:* *{3}*", env.SLACK_STATUS_ICON, github.workflow, github.job, job.status)) }}
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJson(format("*Branch:* `{0}`\n*Commit:* `{1}`\n*Author:* `{2}`", github.ref, github.sha, github.actor)) }}
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJson(format("*Commit message:*\n`{0}`", github.event.head_commit.message)) }}
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJson(format(":link: *<{0}/{1}/actions/runs/{2}|View workflow run>*", github.server_url, github.repository, github.run_id)) }}
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ${{ toJson(format("*Test summary (last lines):*\n```{0}```", env.SLACK_TEST_SUMMARY)) }}
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
