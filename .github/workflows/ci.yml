name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification - Job Started
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ":hourglass_flowing_sand: *${{ github.workflow }} - ${{ github.job }} Job has Started*"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ":link: *<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View workflow run>*"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run tests and generate coverage
        run: mvn clean verify
        continue-on-error: true

      - name: Upload coverage report
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: target/site/jacoco/jacoco.xml

      - name: Extract coverage table
        id: extract_coverage_summary
        run: |
          echo "Installing libxml2-utils & tidy dependencies for parsing coverage summary"
          sudo apt install -y libxml2-utils tidy
          
          echo "Clean the HTML into XHTML so xmllint can parse it"
          tidy -q -asxhtml -numeric target/site/jacoco/index.html > target/site/jacoco/clean.html
          
          echo "Extract just the first table (coverage summary)"
          xmllint --html --xpath "//table[1]" target/site/jacoco/clean.html > coverage-table.html
          
          echo "Store the extracted coverage summary table for GitHub Actions output"
          echo 'table<<EOF' >> $GITHUB_OUTPUT
          cat coverage-table.html >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Generate JaCoCo badge
        uses: cicirello/jacoco-badge-generator@v3
        with:
          jacoco-csv-file: target/site/jacoco/jacoco.csv

      - name: Convert badge to base64
        id: badge
        run: echo "data:image/svg+xml;base64,$(base64 -w 0 badges/jacoco.svg)" >> $GITHUB_OUTPUT

      - name: Post coverage summary comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## âœ… Code Coverage

            <img src="${{ steps.badge.outputs.badge }}" alt="Coverage Badge" />

            ### Coverage Report
            ${{ steps.extract.outputs.table }}

      - name: Set success icon
        if: success()
        run: 'echo "SLACK_STATUS_ICON=:white_check_mark: PASSED" >> $GITHUB_ENV'

      - name: Set failure icon
        if: failure()
        run: 'echo "SLACK_STATUS_ICON=:x: FAILED" >> $GITHUB_ENV'

      - name: Set cancellation icon
        if: cancelled()
        run: 'echo "SLACK_STATUS_ICON=:warning: CANCELLED" >> $GITHUB_ENV'

      - name: Slack Notification - Job Finished
        if: always()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ":rocket: *CI Test Results:* ${{ env.SLACK_STATUS_ICON }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ":gear: *CI Workflow:* `${{ github.workflow }}`\n  :wrench: *Job:* `${{ github.job }}`\n  :bar_chart: *Status: `${{ job.status }}`*"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ":herb: *Branch:* `${{ github.ref }}`\n  :memo: *Commit:* `${{ github.sha }}`\n  :bust_in_silhouette: *Author:* `${{ github.actor }}`"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ":speech_balloon: *Commit message:* `${{ github.event.head_commit.message }}`"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ":link: *<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View workflow run>*"
