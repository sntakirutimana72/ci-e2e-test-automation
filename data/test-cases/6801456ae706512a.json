{"uid":"6801456ae706512a","name":"verifyAddingProductWithInvalidData","fullName":"tests.products.PatchProductTest.verifyAddingProductWithInvalidData","historyId":"5eabab3808185d5fecb1383e30767199","time":{"start":1755594873943,"stop":1755594873944,"duration":1},"description":"Verify a merchant cannot update a product when {desc}","descriptionHtml":"<p>Verify a merchant cannot update a product when {desc}</p>\n","status":"broken","statusMessage":"class java.lang.Integer cannot be cast to class java.lang.String (java.lang.Integer and java.lang.String are in module java.base of loader 'bootstrap')","statusTrace":"java.lang.ClassCastException: class java.lang.Integer cannot be cast to class java.lang.String (java.lang.Integer and java.lang.String are in module java.base of loader 'bootstrap')\n\tat tests.products.PatchProductTest.verifyAddingProductWithInvalidData(PatchProductTest.java:34)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n\tat java.base/java.lang.reflect.Method.invoke(Unknown Source)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\n\tat java.base/java.util.concurrent.FutureTask.run(Unknown Source)\n\tat org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n\tat java.base/java.lang.Thread.run(Unknown Source)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"package","value":"tests.products.PatchProductTest"},{"name":"testClass","value":"tests.products.PatchProductTest"},{"name":"testMethod","value":"verifyAddingProductWithInvalidData"},{"name":"parentSuite","value":"Api TestSuite"},{"name":"suite","value":"Product Tests"},{"name":"subSuite","value":"tests.products.PatchProductTest"},{"name":"host","value":"baf1b39b0b97"},{"name":"thread","value":"353@baf1b39b0b97.TestNG-test-Product Tests-2(30)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"As a merchant, I want to be able to add new products to inventory"},{"name":"epic","value":"Ordering System"},{"name":"severity","value":"critical"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Environment","value":"test"},{"name":"Java Version","value":"17.0.16"},{"name":"OS","value":"Linux"},{"name":"Timestamp","value":"1755594873944"},{"name":"arg0","value":"category as non-string value"},{"name":"arg1","value":"{id=1, category=12345}"},{"name":"arg2","value":"ExpectedResponseDto(status=400, message=null, schema=null)"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"6801456ae706512a.json","parameterValues":["test","17.0.16","Linux","1755594873944","category as non-string value","{id=1, category=12345}","ExpectedResponseDto(status=400, message=null, schema=null)"]}